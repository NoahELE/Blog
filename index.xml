<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>NoahELE's Blog</title><link>https://noahele.github.io/Blog/</link><description>Recent content on NoahELE's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 18 Sep 2023 18:47:30 +1000</lastBuildDate><atom:link href="https://noahele.github.io/Blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Functional Programming</title><link>https://noahele.github.io/Blog/posts/functional-programming/</link><pubDate>Mon, 18 Sep 2023 18:47:30 +1000</pubDate><guid>https://noahele.github.io/Blog/posts/functional-programming/</guid><description>Pipe Operator Recently I&amp;rsquo;ve been attracted by the pipe operator in Elixir, which is |&amp;gt;. It&amp;rsquo;s a very simple operator, but it can make the code more readable and easier to understand. It helps write clean code like this:
&amp;#34;hello world&amp;#34; |&amp;gt; String.upcase() |&amp;gt; String.split(&amp;#34; &amp;#34;) |&amp;gt; Enum.reverse() |&amp;gt; Enum.join(&amp;#34; &amp;#34;) # instead of Enum.join(Enum.reverse(String.split(String.upcase(&amp;#34;hello world&amp;#34;), &amp;#34; &amp;#34;)), &amp;#34; &amp;#34;) But then I found that pipeline operator is not so common in other languages I know like Java, JavaScript and Python.</description></item><item><title>Javascript Related</title><link>https://noahele.github.io/Blog/posts/javascript-related/</link><pubDate>Sun, 23 Jul 2023 21:26:16 +1000</pubDate><guid>https://noahele.github.io/Blog/posts/javascript-related/</guid><description/></item><item><title>Java Related</title><link>https://noahele.github.io/Blog/posts/java-related/</link><pubDate>Sun, 23 Jul 2023 21:21:15 +1000</pubDate><guid>https://noahele.github.io/Blog/posts/java-related/</guid><description>Java The reason of record class has accessors instead of public final attributes: make it possible to override accessor methods allow the record class to implement interfaces Lombok @Data generates constructor only if there is no explicitly written constructor @Data is not recommended for Hibernate entities, as the generated equals and hashCode methods are not suitable for entities managed by Hibernate Spring Circular references is discouraged and they are prohibited by default.</description></item><item><title>Graph Search Algorithms</title><link>https://noahele.github.io/Blog/posts/graph-search-algorithms/</link><pubDate>Thu, 15 Dec 2022 15:23:19 +0800</pubDate><guid>https://noahele.github.io/Blog/posts/graph-search-algorithms/</guid><description>Revise about many graph-searching related algorithms.
DFS: Depth First Search Search till the leaf vertex then choose another path.
It will find a path between two vertices and it&amp;rsquo;s guaranteed to do so, however it is not guaranteed to find the shortest path.
works on graphs that are:
connected unweighted directed Uses a stack data structure to traverse all nodes in a graph.
Steps of the algorithm:
push the root vertex to the stack while the vertex is not empty pop a vertex out of the stack if the vertex is: the destination, then end search marked visited, then continue unvisited: mark it as visited add its unvisited neighbors to the stack BFS: Breadth First Search Search all neighbors of a vertex then move on next level.</description></item></channel></rss>